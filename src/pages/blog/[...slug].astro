    {/* Navigasi Sub-bagian (HANYA di postingan utama) */}
    {!subSection && (
        <nav>
        <ul>
            {
            ( () => { //IIFE
                const contentDir = path.resolve(import.meta.dir, '../../content/blog');
                const subSectionDir = path.join(contentDir, post.id);
                let subSections = [];
                try{
                    const files = readdirSync(subSectionDir);
                    subSections = files.filter(file => file.endsWith('.md')) // Filter hanya file markdown
                    .map(file => {
                        const filePath = path.join(subSectionDir, file);
                        const content = readFileSync(filePath, 'utf-8'); //Baca isi file

                        //Regex untuk mengekstrak frontmatter
                        const frontmatterMatch = content.match(/^---\n([\s\S]*?)\n---/);
                        //Default title (nama file tanpa .md)
                        let title = path.basename(file, '.md');
                        if(frontmatterMatch){
                          const frontmatter = frontmatterMatch[1]; // Ambil string di antara ---
                          // Cari properti title menggunakan regex
                          const titleMatch = frontmatter.match(/title:\s*(.+)/);
                          if(titleMatch) { // Jika ada properti title
                            title = titleMatch[1].trim().replace(/['"]+/g, ''); // Ambil value, hapus spasi, dan hapus petik
                          }

                        }
                        return { // Return object
                        slug: file.replace(/\.md$/, ''),  //Hapus .md untuk jadi slug
                        title: title // Judul dari frontmatter, atau nama file
                        }
                    });
                    return subSections.map((sub) => (
                        <>
                         <li>
                          <a href={`/blog/${post.id}/${sub.slug}`}>{sub.title}</a>
                        </li>
                        </>
                      ))
                } catch(error){
                    return null;
                }

            })()

            }

        </ul>
        </nav>
    )}
